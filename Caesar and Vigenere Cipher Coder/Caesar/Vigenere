choice = input("What message would you like to use a Caesar or Vigenere cypher? ").upper()
choice_options = ["VIGENERE", "VIGENERE CIPHER", "CAESAR", "CAESAR CIPHER"]
alphabet = "abcdefghijklmnopqrstuvwxyz"
code_word_repeated = []
message = []
new_message = []

if not choice in choice_options: 
  print("Invalid input. Please choose either Caesar or Vigenere.")
  choice = input("What message would you like to decode, Caesar or Vigenere? ").upper()

def Cdecoder(message, offset):
    new_message = []
    offset = int(offset)
    for x in message: 
        if x in alphabet: 
            real_index = (alphabet.find(x) + offset) % 26
            new_message.append(alphabet[real_index])
        else: 
            new_message.append(x)
    new_message = "".join(str(x) for x in new_message)
    return new_message

def Ccoder(message, offset):
    new_message = []
    offset = int(offset)
    for x in message: 
        if x in alphabet: 
            real_index = (alphabet.find(x) - offset) % 26
            new_message.append(alphabet[real_index])
        else: 
            new_message.append(x)
    new_message = "".join(str(x) for x in new_message)
    return new_message

def Cbrute_force (Cdecoder, message): 
  for i in range(1, 26, 1):
      print("Offset", i, ":")
      print(Cdecoder(message, i))
      print(" ")

def Vcode_word_repeater(message, alphabet, code_word):
    index = 0
    code_word_repeated = []
    code_word = list(code_word)
    for x in message: 
        if x in alphabet: 
            code_word_repeated.append(code_word[index])
            index = (index + 1) % len(code_word) 
        else: 
            code_word_repeated.append(x)
    #code_word_repeated = "".join(str(x) for x in code_word_repeated)
    return code_word_repeated

def Vdecoder(code_word_repeated, alphabet, code_word, message): 
    new_message = []
    message = list(message)
    code_word_repeated = Vcode_word_repeater(message, alphabet, code_word)
    zipped_list = zip(message, code_word_repeated)
    
    for x in zipped_list: 
        offset = alphabet.find(x[1]) 
        if x[0] in alphabet: 
            real_index = (alphabet.index(x[0]) - offset) % 26
            new_message.append(alphabet[real_index])
        else: 
            new_message.append(x[1])
    new_message = "".join(str(x) for x in new_message)                                          
    return new_message

def Vcoder(code_word_repeated, alphabet, code_word, message): 
  
    new_message = []
    message = list(message)
    code_word_repeated = Vcode_word_repeater(message, alphabet, "friends")
    zipped_list = zip(message, code_word_repeated)
    
    for x in zipped_list: 
        offset = alphabet.find(x[1]) 
        if x[0] in alphabet: 
            real_index = (alphabet.index(x[0]) + offset) % 26
            new_message.append(alphabet[real_index])
        else: 
            new_message.append(x[1])
    new_message = "".join(str(x) for x in new_message)                                          
    return new_message

if choice == "VIGENERE": 
  vigenere_message = input("Would you like to encode or decode a message with the Vigenere Cipher? ").upper()
  vigenere_options = ["ENCODE", "DECODE"]
  if not vigenere_message in vigenere_options: 
    print("Invalid input. Please select ENCODE or DECODE ")
    vigenere_message = input("Would you like to encode or decode a message with the Vigenere Cipher? ").upper()
  if vigenere_message == "ENCODE":
    code_word = input("Please enter the code word you would like to use: ")
    message = input("Please enter the message you would like to encode: ")
    Vcode_word_repeater(message, alphabet, code_word)
    print("Your coded message is: ", Vcoder(code_word_repeated, alphabet, code_word, message))
  if vigenere_message == "DECODE": 
    code_word = input("Please enter the code word used to write the message: ")
    message = input("Please enter the message you would like to decipher: ")
    Vcode_word_repeater(message, alphabet, code_word)
    print("Your deciphered message is: ", Vdecoder(code_word_repeated, alphabet, code_word, message))

if choice == "CAESAR": 
  caesar_message = input("Would you like to encode or decode a message with the Caesar Cipher? ").upper()
  caesar_options = ["ENCODE", "DECODE"]
  if not caesar_message in caesar_options: 
    print("Invalid input. Please select ENCODE or DECODE ")
    caesar_message = input("Would you like to encode or decode a message with the Vigenere Cipher? ").upper()
  if caesar_message == "ENCODE":
    offset = input("Please enter the offset you would like to use: ")
    message = input("Please enter the message you would like to encode: ")
    print("Your coded message is: ", Ccoder(message, offset))
  if caesar_message == "DECODE":
    caesar_brute_force_option = input("Do you want to brute force the message? ")
    if caesar_brute_force_option == "Y": 
      message = input("Please enter the message you would like to decipher: ")
      print("The following are the possibilities: ")
      Cbrute_force(Cdecoder, message)
    if caesar_brute_force_option == "N":
      offset = input("Please enter the offset used to write the message: ")
      message = input("Please enter the message you would like to decipher: ")
      print("Your deciphered message is: ", Cdecoder(message, offset))
